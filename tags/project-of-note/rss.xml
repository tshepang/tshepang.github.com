<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Tshepang logs</title>
        <link>http://tshepang.net</link>
        <description></description>
        <generator>Gutenberg</generator>
        <language>en</language>
        <atom:link href="http://tshepang.net/tags/project-of-note/rss.xml/" rel="self" type="application/rss+xml"/>
        <lastBuildDate>Thu, 11 Sep 2014 00:00:00 +0000</lastBuildDate>
        
            <item>
                <title>project of note: Debian LTS</title>
                <pubDate>Thu, 11 Sep 2014 00:00:00 +0000</pubDate>
                <link>http://tshepang.net/project-of-note-debian-lts/</link>
                <guid>http://tshepang.net/project-of-note-debian-lts/</guid>
                <description>&lt;p&gt;One of the complaints about Debian stable releases is that they reach
End Of Life too early (~3 years). This can result in some people
choosing commercially-backed alternatives like Ubuntu and Red Hat, for
they don&#x27;t want to be bothered to have to upgrade that frequently (not
everyone cares for the latest things, and it&#x27;s not always practical to
do OS upgrades). That&#x27;s why the &lt;a href=&quot;https:&#x2F;&#x2F;wiki.debian.org&#x2F;LTS&quot;&gt;Debian LTS (Long Term Support)
project&lt;&#x2F;a&gt;, which extends the life of a stable release to 5 years, excites
me.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s also super-nice that &lt;a href=&quot;http:&#x2F;&#x2F;www.freexian.com&#x2F;services&#x2F;debian-lts.html&quot;&gt;contributing to it financially&lt;&#x2F;a&gt; is made damn
easy, thanks to Freexian, a company run by a great Debian Developer,
&lt;a href=&quot;http:&#x2F;&#x2F;raphaelhertzog.com&quot;&gt;RaphaÃ«l Hertzog&lt;&#x2F;a&gt;. The project is now a few months old, and has achieved
moderate success (&lt;a href=&quot;http:&#x2F;&#x2F;raphaelhertzog.com&#x2F;2014&#x2F;09&#x2F;10&#x2F;freexians-first-report-about-debian-long-term-support&quot;&gt;latest status report&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>project of note: Debian Installer</title>
                <pubDate>Thu, 20 Mar 2014 00:00:00 +0000</pubDate>
                <link>http://tshepang.net/project-of-note-debian-installer/</link>
                <guid>http://tshepang.net/project-of-note-debian-installer/</guid>
                <description>&lt;p&gt;I&#x27;ve looked at pretty installers like that of Ubuntu and Fedora, and
they are all very easy and slick. But whenever I install Debian, I
don&#x27;t really see how much harder it is to use, though it&#x27;s a lot
uglier.&lt;&#x2F;p&gt;
&lt;p&gt;Anyways, what triggered this post is the following tit-bit:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;d-i [Debian Installer] is the very first thing many of our users
see, and has a huge range of uses, from simple desktop installs to
massive corporate deployments; it&#x27;s unspeakably important that it
works well, and it&#x27;s a testament to its design that it&#x27;s been able
to trundle along without actually very much serious refactoring for
the best part of five years now.&lt;&#x2F;p&gt;
&lt;p&gt;-- &lt;a href=&quot;http:&#x2F;&#x2F;raphaelhertzog.com&#x2F;2010&#x2F;11&#x2F;25&#x2F;people-behind-debian-colin-watson&#x2F;&quot;&gt;an interview of Colin Watson&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;In addition, this tool (or rather, a set of tools) also happens to be
rock-solid, and its great reliability and ease-of-use gets admiration
from me on each install... I&#x27;ve done dozens, with not one instance of
data loss.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>project of note: git-cola</title>
                <pubDate>Thu, 17 Oct 2013 00:00:00 +0000</pubDate>
                <link>http://tshepang.net/project-of-note-git-cola/</link>
                <guid>http://tshepang.net/project-of-note-git-cola/</guid>
                <description>&lt;p&gt;I use &lt;a href=&quot;http:&#x2F;&#x2F;git-cola.github.io&quot;&gt;git-cola&lt;&#x2F;a&gt; mostly when I want to commit various hunks separately;
it makes that task real easy.&lt;&#x2F;p&gt;
&lt;p&gt;I was impressed by its equivalent functionality for the git &lt;code&gt;--amend&lt;&#x2F;code&gt;
option the first time I saw it. If you click on the &lt;strong&gt;Amend Last
Commit&lt;&#x2F;strong&gt; radio button, it actually displays the commit message of that
previous commit. I was surprised to see it, especially since on clicking
that option, I quickly ran to the command-line to copy that commit
message, only to see the message waiting for me, ready to be edited
away.&lt;&#x2F;p&gt;
&lt;p&gt;Another feature I really like is that if you attempt to commit something
without staging it first, instead of just complaining, if offers to
&lt;em&gt;stage and commit&lt;&#x2F;em&gt; all in one click. Nice.&lt;&#x2F;p&gt;
&lt;p&gt;These functionalities are real simple, but they really make for a
pleasant user experience. Pity I haven&#x27;t seen a tool as easy to use in
the land of Mercurial. There, I use the command-line &lt;code&gt;hg record&lt;&#x2F;code&gt; which
isn&#x27;t as pleasant.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>project of note: Valgrind</title>
                <pubDate>Wed, 25 Sep 2013 00:00:00 +0000</pubDate>
                <link>http://tshepang.net/project-of-note-valgrind/</link>
                <guid>http://tshepang.net/project-of-note-valgrind/</guid>
                <description>&lt;p&gt;I have, since using Valgrind (and reading a bit of its documentation)
some years ago, developed much respect for it. It is quite an advanced
tool, and though its primary use is detecting memory leaks, I am here
going to explore its other functionality... calculating the cost of
each line of code in the CPU. This is useful when tuning programs for
performance.&lt;&#x2F;p&gt;
&lt;p&gt;Following is example code; it accepts 2 arguments, a filename and text
that will be written to that file:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;string.h&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;errno.h&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;stdio.h&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;fcntl.h&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;unistd.h&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;main &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;argc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;char &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;**&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;argv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;char&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; path[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0xFF&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;];
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;char&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; content[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0xFF&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;];
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; fd;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ssize_t written;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(argc &amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;fprintf &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(stderr, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;usage: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; &amp;lt;filename&amp;gt; &amp;lt;content&amp;gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;, argv[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;]);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;strcpy &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(path, argv[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;]);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;sprintf &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(content, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;, argv[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;]);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;fd = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;creat &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(path, S_IRWXU);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(fd == -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;fprintf &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(stderr, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;open error: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; (&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;)n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;strerror &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(errno), path);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;written = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;write &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(fd, content, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;strlen &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(content));
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(written == -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;fprintf &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(stderr, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;write error: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; (&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;)n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;strerror &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(errno), path);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Build command (using GCC 4.8.1):&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;gcc -Wall -pedantic -g play.c -o play
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;System details:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;$ uname --all
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;Linux thome 3.11-trunk-amd64 #1 SMP Debian 3.11-1~exp1 (2013-09-12) x86_64 GNU&#x2F;Linux
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;$ sudo lshw -class processor
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;*-cpu
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;description: CPU
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;product: Intel(R) Core(TM) i5-2410M CPU @ 2.30GHz
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;vendor: Intel Corp.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;physical id: 4
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;bus info: cpu@0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;version: Intel(R) Core(TM) i5-2410M CPU @ 2.30GHz
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;serial: To Be Filled By O.E.M.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;slot: CPU 1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;size: 2300MHz
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;capacity: 4GHz
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;width: 64 bits
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;clock: 100MHz
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;capabilities: x86-64 fpu fpu_exception wp vme de pse tsc msr
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;constant_tsc arch_perfmon pebs bts rep_good nopl xtopology
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;x2apic popcnt tsc_deadline_timer xsave avx lahf_lm ida arat epb
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;aes cpufreq
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;configuration: cores=2 enabledcores=1 threads=2
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Running the resulting binary with &lt;strong&gt;Callgrind&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;$ valgrind --tool=callgrind --callgrind-out-file=out .&#x2F;play filename
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;filecontent
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;==5308== Callgrind, a call-graph generating cache profiler
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;==5308== Copyright (C) 2002-2012, and GNU GPL&amp;#39;d, by Josef Weidendorfer
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;et al.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;==5308== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;info
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;==5308== Command: .&#x2F;play filename filecontent
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;==5308==
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;==5308== For interactive control, run &amp;#39;callgrind_control -h&amp;#39;.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;==5308==
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;==5308== Events    : Ir
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;==5308== Collected : 107520
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;==5308==
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;==5308== I   refs:      107,520
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;$ cat filename
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;filecontent
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And finally, seeing closely the cost of each function call, where &lt;strong&gt;Ir&lt;&#x2F;strong&gt;
stands for &lt;strong&gt;Instruction cache reads&lt;&#x2F;strong&gt;, which you can read as &lt;em&gt;number of
CPU instructions&lt;&#x2F;em&gt;. I have used &lt;code&gt;tree=calling&lt;&#x2F;code&gt; option so that I can see
the cost of all operations called by a parent (marked with a &lt;code&gt;*&lt;&#x2F;code&gt;) :&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;$ callgrind_annotate --tree=calling out play.c
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;---++++++--
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;Profile data file &amp;#39;out&amp;#39; (creator: callgrind-3.8.1)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;---++++++--
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;I1 cache:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;D1 cache:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;LL cache:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;Timerange: Basic block 0 - 22326
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;Trigger: Program termination
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;Profiled target:  .&#x2F;play filename filecontent (PID 5308, part 1)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;Events recorded:  Ir
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;Events shown:     Ir
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;Event sort order: Ir
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;Thresholds:       99
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;Include dirs:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;User annotated:   play.c
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;Auto-annotation:  off
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;---++++++--
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;Ir
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;---++++++--
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;107,520  PROGRAM TOTALS
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;---++++++--
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;Ir  file:function
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;---++++++--
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;24,113  *  &#x2F;build&#x2F;eglibc-TepTGA&#x2F;eglibc-2.17&#x2F;elf&#x2F;dl-lookup.c:do_lookup_x [&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;ld-2.17.so]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;1,053  &amp;gt;   &#x2F;build&#x2F;eglibc-TepTGA&#x2F;eglibc-2.17&#x2F;elf&#x2F;dl-misc.c:_dl_name_match_p (25x) [&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;ld-2.17.so]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;13,423  &amp;gt;   &#x2F;build&#x2F;eglibc-TepTGA&#x2F;eglibc-2.17&#x2F;elf&#x2F;dl-lookup.c:check_match.9345 (88x) [&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;ld-2.17.so]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;18,264  *  &#x2F;build&#x2F;eglibc-TepTGA&#x2F;eglibc-2.17&#x2F;elf&#x2F;dl-lookup.c:_dl_lookup_symbol_x [&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;ld-2.17.so]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;38,589  &amp;gt;   &#x2F;build&#x2F;eglibc-TepTGA&#x2F;eglibc-2.17&#x2F;elf&#x2F;dl-lookup.c:do_lookup_x (94x) [&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;ld-2.17.so]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;15,836  *  &#x2F;build&#x2F;eglibc-TepTGA&#x2F;eglibc-2.17&#x2F;elf&#x2F;..&#x2F;sysdeps&#x2F;x86_64&#x2F;dl-machine.h:_dl_relocate_object
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;13  &amp;gt;   &#x2F;build&#x2F;eglibc-TepTGA&#x2F;eglibc-2.17&#x2F;string&#x2F;..&#x2F;sysdeps&#x2F;x86_64&#x2F;multiarch&#x2F;memmove.c:memcpy@GLIBC_2.2.5 (1x) [&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc-2.17.so]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;81  &amp;gt;   &#x2F;build&#x2F;eglibc-TepTGA&#x2F;eglibc-2.17&#x2F;string&#x2F;..&#x2F;sysdeps&#x2F;x86_64&#x2F;multiarch&#x2F;strcmp.S:strcasecmp (1x) [&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc-2.17.so]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;6  &amp;gt;   &#x2F;build&#x2F;eglibc-TepTGA&#x2F;eglibc-2.17&#x2F;string&#x2F;..&#x2F;sysdeps&#x2F;x86_64&#x2F;multiarch&#x2F;strcmp.S:strncasecmp (1x) [&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc-2.17.so]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;7  &amp;gt;   &#x2F;build&#x2F;eglibc-TepTGA&#x2F;eglibc-2.17&#x2F;string&#x2F;..&#x2F;sysdeps&#x2F;x86_64&#x2F;multiarch&#x2F;memset.S:memset (1x) [&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc-2.17.so]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;51,501  &amp;gt;   &#x2F;build&#x2F;eglibc-TepTGA&#x2F;eglibc-2.17&#x2F;elf&#x2F;dl-lookup.c:_dl_lookup_symbol_x (86x) [&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;ld-2.17.so]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;18  &amp;gt;   &#x2F;build&#x2F;eglibc-TepTGA&#x2F;eglibc-2.17&#x2F;string&#x2F;..&#x2F;sysdeps&#x2F;x86_64&#x2F;multiarch&#x2F;..&#x2F;memcpy.S:memcpy (1x) [&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;ld-2.17.so]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;67  &amp;gt;   &#x2F;build&#x2F;eglibc-TepTGA&#x2F;eglibc-2.17&#x2F;time&#x2F;..&#x2F;sysdeps&#x2F;unix&#x2F;sysv&#x2F;linux&#x2F;x86_64&#x2F;time.c:time (1x) [&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc-2.17.so]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;67  &amp;gt;   &#x2F;build&#x2F;eglibc-TepTGA&#x2F;eglibc-2.17&#x2F;time&#x2F;..&#x2F;sysdeps&#x2F;unix&#x2F;sysv&#x2F;linux&#x2F;x86_64&#x2F;gettimeofday.c:gettimeofday (1x) [&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc-2.17.so]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;6  &amp;gt;   &#x2F;build&#x2F;eglibc-TepTGA&#x2F;eglibc-2.17&#x2F;string&#x2F;..&#x2F;sysdeps&#x2F;x86_64&#x2F;multiarch&#x2F;strnlen.S:strnlen (1x) [&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc-2.17.so]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;[snip; to be continued]
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I have trimmed the output to bring focus to the most interesting output
of all, which is the total cost for each line of my code:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;[continued]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;---++++++--
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;-- User-annotated source: play.c
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;---++++++--
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;Ir
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.  #include &amp;lt;string.h&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.  #include &amp;lt;errno.h&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.  #include &amp;lt;stdio.h&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.  #include &amp;lt;fcntl.h&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.  #include &amp;lt;unistd.h&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.  int
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.  main (int argc, char **argv)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;5  {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.      char path[0xFF];
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.      char content[0xFF];
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.      int fd;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.      ssize_t written;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;2      if (argc &amp;lt; 3) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.     fprintf (stderr, &amp;quot;usage: %s &amp;lt;filename&amp;gt; &amp;lt;content&amp;gt;n&amp;quot;, argv[0]);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.     return 1;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.      }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;7      strcpy (path, argv[1]);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;21  =&amp;gt; &#x2F;build&#x2F;eglibc-TepTGA&#x2F;eglibc-2.17&#x2F;string&#x2F;..&#x2F;sysdeps&#x2F;x86_64&#x2F;multiarch&#x2F;strcpy-sse2-unaligned.S:__strcpy_sse2_unaligned (1x)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;799  =&amp;gt; &#x2F;build&#x2F;eglibc-TepTGA&#x2F;eglibc-2.17&#x2F;elf&#x2F;..&#x2F;sysdeps&#x2F;x86_64&#x2F;dl-trampoline.S:_dl_runtime_resolve (1x)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;8      sprintf (content, &amp;quot;%sn&amp;quot;, argv[2]);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;1,188  =&amp;gt; &#x2F;build&#x2F;eglibc-TepTGA&#x2F;eglibc-2.17&#x2F;stdio-common&#x2F;sprintf.c:sprintf (1x)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;805  =&amp;gt; &#x2F;build&#x2F;eglibc-TepTGA&#x2F;eglibc-2.17&#x2F;elf&#x2F;..&#x2F;sysdeps&#x2F;x86_64&#x2F;dl-trampoline.S:_dl_runtime_resolve (1x)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;5      fd = creat (path, S_IRWXU);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;766  =&amp;gt; &#x2F;build&#x2F;eglibc-TepTGA&#x2F;eglibc-2.17&#x2F;elf&#x2F;..&#x2F;sysdeps&#x2F;x86_64&#x2F;dl-trampoline.S:_dl_runtime_resolve (1x)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;7  =&amp;gt; &#x2F;build&#x2F;eglibc-TepTGA&#x2F;eglibc-2.17&#x2F;io&#x2F;..&#x2F;sysdeps&#x2F;unix&#x2F;syscall-template.S:creat (1x)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;2      if (fd == -1) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.     fprintf (stderr, &amp;quot;open error: %s (&amp;#39;%s&amp;#39;)n&amp;quot;, strerror (errno), path);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.     return 1;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.      }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;10      written = write (fd, content, strlen (content));
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;7  =&amp;gt; &#x2F;build&#x2F;eglibc-TepTGA&#x2F;eglibc-2.17&#x2F;io&#x2F;..&#x2F;sysdeps&#x2F;unix&#x2F;syscall-template.S:write (1x)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;14  =&amp;gt; &#x2F;build&#x2F;eglibc-TepTGA&#x2F;eglibc-2.17&#x2F;string&#x2F;..&#x2F;sysdeps&#x2F;x86_64&#x2F;multiarch&#x2F;strlen-sse2-pminub.S:__strlen_sse2_pminub (1x)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;1,567  =&amp;gt; &#x2F;build&#x2F;eglibc-TepTGA&#x2F;eglibc-2.17&#x2F;elf&#x2F;..&#x2F;sysdeps&#x2F;x86_64&#x2F;dl-trampoline.S:_dl_runtime_resolve (2x)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;2      if (written == -1) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.     fprintf (stderr, &amp;quot;write error: %s (&amp;#39;%s&amp;#39;)n&amp;quot;, strerror (errno), path);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.     return 1;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.      }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;1      return 0;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;2  }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;---++++++--
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;Ir
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;---++++++--
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;0  percentage of events annotated
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;As an aside, note that the indentation is messed up a bit.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Since I normally work at too high a level to care about CPU instructions
cycles at this detail, I found the exercise eye-opening.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>project of note: Sphinx</title>
                <pubDate>Thu, 08 Aug 2013 00:00:00 +0000</pubDate>
                <link>http://tshepang.net/project-of-note-sphinx/</link>
                <guid>http://tshepang.net/project-of-note-sphinx/</guid>
                <description>&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;sphinx-doc.org&quot;&gt;Sphinx&lt;&#x2F;a&gt; is a tool that is used to generate documentation from
&lt;a href=&quot;http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;ReStructuredText&quot;&gt;reStructuredText&lt;&#x2F;a&gt; (rST) markup language, and is mainly used in the
Python ecosystem. I honor it much for it is a really powerful system,
and I have come to appreciate it a lot recently, with my work on
documentation of software that falls under the Pylons project.&lt;&#x2F;p&gt;
&lt;p&gt;It is a pity that the markup is not as simple as that of the more
popular &lt;a href=&quot;http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Markdown&quot;&gt;Markdown&lt;&#x2F;a&gt;, but maybe that was out of necessity, since it is far
more advanced: it was initially built as a replacement for the tools
that build CPython documentation, which is quite extensive and needs
lots of rails.&lt;&#x2F;p&gt;
&lt;p&gt;As an example of that power, have a look at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Pylons&#x2F;pyramid_tutorials&#x2F;commit&#x2F;134190&quot;&gt;these changes I made&lt;&#x2F;a&gt; for
&lt;a href=&quot;http:&#x2F;&#x2F;docs.pylonsproject.org&#x2F;projects&#x2F;pyramid_tutorials&#x2F;en&#x2F;latest&#x2F;&quot;&gt;pyramid_tutorials&lt;&#x2F;a&gt;. In that commit, the feature I used allows you to
include code snippets directly from files, instead of doing the
copy-paste dance, avoiding duplication and rot. This feature is known as
&lt;a href=&quot;http:&#x2F;&#x2F;sphinx-doc.org&#x2F;markup&#x2F;code.html#directive-literalinclude&quot;&gt;literalinclude&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Another feature I recently worked with in the recent past is
&lt;a href=&quot;http:&#x2F;&#x2F;sphinx-doc.org&#x2F;ext&#x2F;intersphinx.html#confval-intersphinx_mapping&quot;&gt;intersphinx_mapping&lt;&#x2F;a&gt;. It allows one to generate references in rST as
if those reference were local. For example, if you wanted to generate a
link to the CPython &lt;code&gt;open()&lt;&#x2F;code&gt; built-in function, you would need only
specify it as &lt;code&gt;:func:open&lt;&#x2F;code&gt;. This is as opposed to finding the actual
link and specifying it normally.&lt;&#x2F;p&gt;
&lt;p&gt;One other feature I discovered (but haven&#x27;t used yet) is &lt;a href=&quot;http:&#x2F;&#x2F;sphinx-doc.org&#x2F;domains.html#info-field-lists&quot;&gt;Info field
lists&lt;&#x2F;a&gt; feature. To see it in action, visit &lt;a href=&quot;https:&#x2F;&#x2F;postgres-py.readthedocs.org&#x2F;en&#x2F;latest&#x2F;#postgres.Postgres.run&quot;&gt;this link&lt;&#x2F;a&gt;, and then look at
&lt;a href=&quot;https:&#x2F;&#x2F;postgres-py.readthedocs.org&#x2F;en&#x2F;latest&#x2F;_modules&#x2F;postgres.html#Postgres.run&quot;&gt;its markup&lt;&#x2F;a&gt;. It&#x27;s gorgeous!&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>project of note: Discourse</title>
                <pubDate>Sat, 11 May 2013 00:00:00 +0000</pubDate>
                <link>http://tshepang.net/project-of-note-discourse/</link>
                <guid>http://tshepang.net/project-of-note-discourse/</guid>
                <description>&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.codinghorror.com&#x2F;blog&#x2F;2013&#x2F;02&#x2F;civilized-discourse-construction-kit.html&quot;&gt;The announcement&lt;&#x2F;a&gt; by project lead, Jeff Atwood, sold me. This is one
rather incredible guy, a game changer of sorts, most notable for helping
create what is likely &lt;a href=&quot;http:&#x2F;&#x2F;stackoverflow.com&quot;&gt;the most important programming resource on the
web&lt;&#x2F;a&gt;. So whenever he goes and creates something else, I naturally do pay
attention, and this &lt;a href=&quot;http:&#x2F;&#x2F;www.discourse.org&quot;&gt;Discourse&lt;&#x2F;a&gt; thing looks amazing, at least from by
limited usage so far.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>project of note: M cross environment</title>
                <pubDate>Sat, 20 Apr 2013 00:00:00 +0000</pubDate>
                <link>http://tshepang.net/project-of-note-m-cross-environment/</link>
                <guid>http://tshepang.net/project-of-note-m-cross-environment/</guid>
                <description>&lt;p&gt;I spend several hours researching how to build a Qt app (written in C++)
on Debian for users who will run it on Windows. I also wanted it be just
one binary at the end so that deployment is just a matter of copying and
running the one executable. This means I needed to statically-link the
app, and the sad news is that I first needed a statically-linked Qt.&lt;&#x2F;p&gt;
&lt;p&gt;If I had actually known of &lt;a href=&quot;http:&#x2F;&#x2F;mxe.cc&quot;&gt;M cross environment&lt;&#x2F;a&gt; (MXE), I would have
shaved nearly all of those &#x27;wasted&#x27; hours. I am very grateful to the
developers, especially because building Qt was mainly a matter of
installing &lt;a href=&quot;http:&#x2F;&#x2F;mxe.cc&#x2F;#requirements-debian&quot;&gt;a few build dependencies&lt;&#x2F;a&gt; and running &lt;code&gt;make qt&lt;&#x2F;code&gt;. An hour or
two later, I had a newly cross-compiled Qt waiting for my use. It was
also pleasant that the app, in a form of a &lt;code&gt;.exe&lt;&#x2F;code&gt; file, just worked on
Windows 7.&lt;&#x2F;p&gt;
&lt;p&gt;Having a look around, the build system actually looks elegant, and is a
lot simpler than the scary mess that is &lt;a href=&quot;https:&#x2F;&#x2F;live.gnome.org&#x2F;Jhbuild&quot;&gt;JHBuild&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;I have published two guides on Stack Overflow on how this works, &lt;a href=&quot;http:&#x2F;&#x2F;stackoverflow.com&#x2F;a&#x2F;13211922&#x2F;321731&quot;&gt;one
for Qt 4&lt;&#x2F;a&gt; and &lt;a href=&quot;http:&#x2F;&#x2F;stackoverflow.com&#x2F;a&#x2F;14170591&#x2F;321731&quot;&gt;another for Qt 5&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>project of note: PostgreSQL</title>
                <pubDate>Thu, 04 Apr 2013 00:00:00 +0000</pubDate>
                <link>http://tshepang.net/project-of-note-postgresql/</link>
                <guid>http://tshepang.net/project-of-note-postgresql/</guid>
                <description>&lt;p&gt;It is among those rather quite (in terms of controversy) but
highly-respectable projects. It also looks like no other FLOSS DBMS
system compares. It even bills itself &lt;em&gt;the most advanced open source
database&lt;&#x2F;em&gt; on &lt;a href=&quot;http:&#x2F;&#x2F;www.postgresql.org&#x2F;&quot;&gt;its main page&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;ve had great respect for the project for years now, but what prompted
this post is its &lt;a href=&quot;http:&#x2F;&#x2F;www.postgresql.org&#x2F;support&#x2F;security&#x2F;faq&#x2F;2013-04-04&#x2F;&quot;&gt;2013-04-04 Security Release FAQ&lt;&#x2F;a&gt; (&lt;a href=&quot;http:&#x2F;&#x2F;www.piware.de&#x2F;2013&#x2F;04&#x2F;urgent-postgresql-security-updates-for-debianubuntu&#x2F;&quot;&gt;via&lt;&#x2F;a&gt;), a
highly-detailed and thorough explanation of an important security issue
affecting a few of its releases. Reading this, one gets the idea that
it&#x27;s some serious developers running the project, and I deeply
appreciate.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>project of note: reprepro</title>
                <pubDate>Fri, 11 May 2012 00:00:00 +0000</pubDate>
                <link>http://tshepang.net/project-of-note-reprepro/</link>
                <guid>http://tshepang.net/project-of-note-reprepro/</guid>
                <description>&lt;p&gt;I have given kudos to &lt;a href=&quot;http:&#x2F;&#x2F;mirrorer.alioth.debian.org&#x2F;&quot;&gt;reprepro&lt;&#x2F;a&gt; &lt;a href=&quot;http:&#x2F;&#x2F;tshepang.net&#x2F;reprepro-saved-my-live&quot;&gt;twice&lt;&#x2F;a&gt; &lt;a href=&quot;http:&#x2F;&#x2F;tshepang.net&#x2F;what-i-do-after-debian-installation&quot;&gt;before&lt;&#x2F;a&gt;, and though those
2 posts are actually outdated, I still keep a custom repository, a
subset of the official repository of a specific arch, but only of
packages that I ever install.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Every once in a while, I run this command:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;$ reprepro -vv --basedir ~&#x2F;.custom_repo&#x2F; includedeb tshepang
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;var&#x2F;cache&#x2F;apt&#x2F;archives&#x2F;*deb
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;What it does is add packages that are stored by the Debian package
management system (located in &lt;code&gt;&#x2F;var&#x2F;cache&#x2F;apt&#x2F;archives&lt;&#x2F;code&gt;) to the custom
repository (located in &lt;code&gt;~&#x2F;.custom_repo&lt;&#x2F;code&gt;). That ensures that I only keep
packages that matter to me for any later install.&lt;&#x2F;p&gt;
&lt;p&gt;Note that &lt;code&gt;tshepang&lt;&#x2F;code&gt; is the name of the repository. It&#x27;s an unofficial
equivalent of &lt;code&gt;testing&lt;&#x2F;code&gt; and &lt;code&gt;unstable&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Another command that I sometimes run, though less frequently, is:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;$ reprepro -vv --basedir ~&#x2F;.custom_repo&#x2F; includedeb tshepang
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;var&#x2F;cache&#x2F;apt&#x2F;archives&#x2F;*deb
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This one is used to help keep the repository fresh. Check out &lt;a href=&quot;http:&#x2F;&#x2F;tshepang.net&#x2F;removing-obsolete-packages-from-a-local-debian-repository&quot;&gt;this
post&lt;&#x2F;a&gt; for an explanation.&lt;&#x2F;p&gt;
&lt;p&gt;Even less frequently, it happens that some package files are no longer
referenced (i.e.Â not found in &lt;code&gt;Package.gz&lt;&#x2F;code&gt;) for some reason. Here&#x27;s
handy command to display them:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;$ reprepro --basedir ~&#x2F;.custom_repo dumpunreferenced
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And here&#x27;s another that actually gets rid of them:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;$ reprepro --basedir ~&#x2F;.custom_repo deleteunreferenced
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;</description>
            </item>
        
            <item>
                <title>project of note: Requests</title>
                <pubDate>Sat, 31 Dec 2011 00:00:00 +0000</pubDate>
                <link>http://tshepang.net/project-of-note-requests/</link>
                <guid>http://tshepang.net/project-of-note-requests/</guid>
                <description>&lt;p&gt;Requests is a Python module that makes it real easy to deal with HTTP.
As an example, something as scary as fetching a web page that needs
authentication requires only a single line of code:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;requests.get(&amp;quot;https:&#x2F;&#x2F;example.com&amp;quot;, auth=(&amp;quot;user&amp;quot;, &amp;quot;pass&amp;quot;))
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It&#x27;s capable of &lt;a href=&quot;http:&#x2F;&#x2F;docs.python-requests.org&#x2F;en&#x2F;latest&#x2F;index.html#feature-support&quot;&gt;a lot more&lt;&#x2F;a&gt; of course (&lt;a href=&quot;http:&#x2F;&#x2F;docs.python-requests.org&#x2F;en&#x2F;latest&#x2F;user&#x2F;quickstart&#x2F;&quot;&gt;tutorial&lt;&#x2F;a&gt;), and it&#x27;s weird
that something this nice hasn&#x27;t been around for ages. There is another
that is much simpler to use and more advanced than Python&#x27;s standard
library named &lt;a href=&quot;http:&#x2F;&#x2F;code.google.com&#x2F;p&#x2F;httplib2&#x2F;&quot;&gt;httplib2&lt;&#x2F;a&gt;, but it&#x27;s not quite as simple&#x2F;elegant:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;h = httplib2.Http(&amp;quot;.cache&amp;quot;)  &#x2F;&#x2F; ugly
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;h.add_credentials(&amp;quot;user&amp;quot;, &amp;quot;pass&amp;quot;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;resp, content = h.request(&amp;quot;https:&#x2F;&#x2F;example.com&amp;quot;)
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;An example for achieving the same with only the standard library is far
messier.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>project of note: Iotop</title>
                <pubDate>Fri, 25 Feb 2011 00:00:00 +0000</pubDate>
                <link>http://tshepang.net/project-of-note-iotop/</link>
                <guid>http://tshepang.net/project-of-note-iotop/</guid>
                <description>&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;guichaz.free.fr&#x2F;iotop&#x2F;&quot;&gt;Iotop&lt;&#x2F;a&gt; displays disk I&#x2F;O usage of individual process, in a way similar
to top. What I really loved though is that it allows one to display the
accumulated amount of I&#x2F;O on any of the DISK READ, DISK WRITE, SWAPIN,
and IO (overall). This is through a nifty interface:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;You just press &lt;code&gt;a&lt;&#x2F;code&gt; on the keyboard, and it will sort the hungriest
processes on top.&lt;&#x2F;li&gt;
&lt;li&gt;Reversing the order, you just press &lt;code&gt;r&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;If you want to sort by other colums, you just press the left&#x2F;right
key.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;guichaz.free.fr&#x2F;iotop&#x2F;iotop_big.png&quot;&gt;The presentation&lt;&#x2F;a&gt; is rather busy, and it doesn&#x27;t have the myriad
options that &lt;code&gt;top&lt;&#x2F;code&gt; has (e.g.Â I can&#x27;t chose to hide any of the columns
I&#x27;m uninterested in), but it&#x27;s more than good enough for it&#x27;s
specific purpose.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>project of note: matplotlib</title>
                <pubDate>Thu, 17 Feb 2011 00:00:00 +0000</pubDate>
                <link>http://tshepang.net/project-of-note-matplotlib/</link>
                <guid>http://tshepang.net/project-of-note-matplotlib/</guid>
                <description>&lt;p&gt;I believe &lt;a href=&quot;http:&#x2F;&#x2F;matplotlib.sourceforge.net&#x2F;&quot;&gt;matplotlib&lt;&#x2F;a&gt; is THE plotting library for Python. It happens to
be highly advanced too, and has &lt;a href=&quot;http:&#x2F;&#x2F;matplotlib.sourceforge.net&#x2F;contents.html&quot;&gt;extensive documentation&lt;&#x2F;a&gt; to show up for
it, including a large collection &lt;a href=&quot;http:&#x2F;&#x2F;matplotlib.sourceforge.net&#x2F;examples&#x2F;index.html&quot;&gt;examples&lt;&#x2F;a&gt; and a &lt;a href=&quot;http:&#x2F;&#x2F;matplotlib.sourceforge.net&#x2F;gallery.html&quot;&gt;gallery&lt;&#x2F;a&gt; of plots
(and the code used to produce them).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;tshepang.net&#x2F;plotting-with-matplotlib&quot;&gt;I played a bit with it&lt;&#x2F;a&gt; and &lt;a href=&quot;http:&#x2F;&#x2F;tshepang.net&#x2F;matplotlib-rocks&quot;&gt;was later on impressed by its
versatility&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>project of note: Geany</title>
                <pubDate>Wed, 19 Jan 2011 00:00:00 +0000</pubDate>
                <link>http://tshepang.net/project-of-note-geany/</link>
                <guid>http://tshepang.net/project-of-note-geany/</guid>
                <description>&lt;p&gt;I&#x27;ve been a satisfied user of Geany, a lightweight IDE, these past few
months:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;automatically detects if it should auto-indent (EG after a function
definition in Python)&lt;&#x2F;li&gt;
&lt;li&gt;got code-folding&lt;&#x2F;li&gt;
&lt;li&gt;can highlight #include file and open it (on new tab); does not do
this if it&#x27;s a system file (&#x2F;usr&#x2F;include) though&lt;&#x2F;li&gt;
&lt;li&gt;got terminal emulator on bottom (though I don&#x27;t use it)&lt;&#x2F;li&gt;
&lt;li&gt;can automatically detect tab width (or so it claims)&lt;&#x2F;li&gt;
&lt;li&gt;has a usage finder which shows where a given function is called,
even among multiple files&lt;&#x2F;li&gt;
&lt;li&gt;got autosave option as a plugin&lt;&#x2F;li&gt;
&lt;li&gt;got file browser option as a plugin (although it does not detect
filesystem changes, EG when a file is deleted the view is not
updated to reveal such a change)&lt;&#x2F;li&gt;
&lt;li&gt;when space-indent is chosen, backspacing through such behaves as if
they were tabs which enhances navigability&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</description>
            </item>
        
            <item>
                <title>project of note: linkchecker</title>
                <pubDate>Tue, 18 Jan 2011 00:00:00 +0000</pubDate>
                <link>http://tshepang.net/project-of-note-linkchecker/</link>
                <guid>http://tshepang.net/project-of-note-linkchecker/</guid>
                <description>&lt;p&gt;Weeks ago, I looked for a utility that would help me check for my
blog&#x27;s dead links, and I bumped onto &lt;a href=&quot;http:&#x2F;&#x2F;linkchecker.sourceforge.net&#x2F;&quot;&gt;LinkChecker&lt;&#x2F;a&gt; (version on my
system is 6.2). It turned out to be impressively advanced, and here&#x27;s
the summary from its manpage:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;LinkChecker features recursive checking, multithreading, output in
colored or normal text, HTML, SQL, CSV or a sitemap graph in GML or
XML, support for HTTP&#x2F;1.1, HTTPS, FTP, mailto:, news:, nntp:, Telnet
and local file links, restriction of link checking with regular
expression filters for URLs, proxy support, username&#x2F;password
authorization for HTTP and FTP, robots.txt exclusion protocol support,
i18n support, a command line interface and a (Fast)CGI web interface
(requires HTTP server).&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
</description>
            </item>
        
            <item>
                <title>project of note: Mailman</title>
                <pubDate>Tue, 18 Jan 2011 00:00:00 +0000</pubDate>
                <link>http://tshepang.net/project-of-note-mailman/</link>
                <guid>http://tshepang.net/project-of-note-mailman/</guid>
                <description>&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;list.org&#x2F;&quot;&gt;Mailman&lt;&#x2F;a&gt; is most likely the most popular mailing list manager in the
FLOSS ecosystem. What I like about it is the ease-of-use it provides for
the end-user: if u wanna subscribe to &lt;a href=&quot;mailto:topic@host.org&quot;&gt;topic@host.org&lt;&#x2F;a&gt; mailing list, you
simply append -request to the recepient name (&lt;a href=&quot;mailto:topic-request@host.org&quot;&gt;topic-request@host.org&lt;&#x2F;a&gt;)
and use the subject &amp;quot;subscribe&amp;quot;, and simply send. To unsubscribe, you
do the same, except the subject becomes &amp;quot;unsubscribe&amp;quot;. There&#x27;s also
the web interface for those who won&#x27;t remember&#x2F;know these simple
instructions of course. Another bonus: it&#x27;s written in Python!&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>project of note: rdiff-backup</title>
                <pubDate>Tue, 18 Jan 2011 00:00:00 +0000</pubDate>
                <link>http://tshepang.net/project-of-note-rdiff-backup/</link>
                <guid>http://tshepang.net/project-of-note-rdiff-backup/</guid>
                <description>&lt;p&gt;So I got my hands on a 250GB 2.5&amp;quot; portable HDD, which led to me to go
do proper backups again. I decided to go back to the familiar
&lt;a href=&quot;http:&#x2F;&#x2F;rdiff-backup.nongnu.org&#x2F;&quot;&gt;rdiff-backup&lt;&#x2F;a&gt; and I became exceedingly impressed by its thorough
documentation (&lt;a href=&quot;http:&#x2F;&#x2F;rdiff-backup.nongnu.org&#x2F;rdiff-backup.1.html&quot;&gt;manpage&lt;&#x2F;a&gt;, &lt;a href=&quot;http:&#x2F;&#x2F;rdiff-backup.nongnu.org&#x2F;FAQ.html&quot;&gt;FAQ&lt;&#x2F;a&gt;, and the one place beginners should
start, &lt;a href=&quot;http:&#x2F;&#x2F;rdiff-backup.nongnu.org&#x2F;examples.html&quot;&gt;examples&lt;&#x2F;a&gt;), a myriad capabilities (over 60 command line
options), and an elegant design (the target directory looks exactly like
the original except for an extra directory named rdiff-backup-data,
which contains all that&#x27;s needed to roll-back, restore, check stats,
...).&lt;&#x2F;p&gt;
&lt;p&gt;My usage:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;$ rdiff-backup --include-globbing-filelist rdiff-backup ~&#x2F; &#x2F;media&#x2F;backup
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;There, &lt;code&gt;~&#x2F;conf&#x2F;rdiff-backup&lt;&#x2F;code&gt; is a file that has a list of directories I
want to exclude in the backup, and &lt;code&gt;&#x2F;media&#x2F;backup&lt;&#x2F;code&gt; is the backup
destination.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;There is a credible competitor in a form of duplicity, which is probably
superior since it&#x27;s got encryption. This duplicity also got a bonus of
being used by some hot new GUI backup utility now &lt;a href=&quot;http:&#x2F;&#x2F;lists.fedoraproject.org&#x2F;pipermail&#x2F;announce&#x2F;2010-May&#x2F;002815.html&quot;&gt;endorsed by Fedora&lt;&#x2F;a&gt;
and may in future be &lt;a href=&quot;http:&#x2F;&#x2F;mail.gnome.org&#x2F;archives&#x2F;desktop-devel-list&#x2F;2010-February&#x2F;msg00013.html&quot;&gt;an official part of GNOME&lt;&#x2F;a&gt;, DÃ©jÃ  Dup.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>project of note: Sudo</title>
                <pubDate>Tue, 18 Jan 2011 00:00:00 +0000</pubDate>
                <link>http://tshepang.net/project-of-note-sudo/</link>
                <guid>http://tshepang.net/project-of-note-sudo/</guid>
                <description>&lt;p&gt;Some of the benefits of Sudo:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The password I authenticate with to perform admin tasks is the same
as the one I use to log in as normal user. This means, in simple
setups, one need only remember one password, instead of two.&lt;&#x2F;li&gt;
&lt;li&gt;The extra command you have to type before performing any admin task
reduces the danger of running dangerous commands... the sort of
thing that is easy to do when logged in as root.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;And some of the more advanced benefits:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;[gives users] permission to do certain tasks as a different user
(which doesn&#x27;t even have to be root) without giving them complete
access to that user or root. On server systems or multiuser systems
with different people working on different tasks not everyone need
complete access to the system, one hands out only the amount of access
that is required for the task.&lt;&#x2F;p&gt;
&lt;p&gt;-- &lt;a href=&quot;http:&#x2F;&#x2F;ask.debian.net&#x2F;questions&#x2F;4cac81ff19ce953ad306ccab&#x2F;answers&#x2F;4cac8a1719ce953ad306dbf0&quot;&gt;source&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
</description>
            </item>
        
            <item>
                <title>project of note: Twisted</title>
                <pubDate>Tue, 18 Jan 2011 00:00:00 +0000</pubDate>
                <link>http://tshepang.net/project-of-note-twisted/</link>
                <guid>http://tshepang.net/project-of-note-twisted/</guid>
                <description>&lt;p&gt;I&#x27;ve been impressed by &lt;a href=&quot;http:&#x2F;&#x2F;stackoverflow.com&#x2F;q&#x2F;2974781&quot;&gt;the claims made for Twisted&lt;&#x2F;a&gt;, which erased the
erroneous thought I&#x27;ve been having that it&#x27;s just another web
framework. Well, it appears it doesn&#x27;t really have an equal, and is
something completely different.&lt;&#x2F;p&gt;
&lt;p&gt;What prompted me to award it &lt;strong&gt;project of note&lt;&#x2F;strong&gt; honor is its &lt;a href=&quot;http:&#x2F;&#x2F;twistedmatrix.com&#x2F;trac&#x2F;wiki&#x2F;ReviewProcess&quot;&gt;patch
review process&lt;&#x2F;a&gt;, a good indicator that this isn&#x27;t a toy.&lt;&#x2F;p&gt;
</description>
            </item>
        
    </channel>
</rss>
